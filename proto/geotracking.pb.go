// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: geotracking.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceType int32

const (
	DeviceType_IOT     DeviceType = 0
	DeviceType_ANDROID DeviceType = 1
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0: "IOT",
		1: "ANDROID",
	}
	DeviceType_value = map[string]int32{
		"IOT":     0,
		"ANDROID": 1,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_geotracking_proto_enumTypes[0].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_geotracking_proto_enumTypes[0]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{0}
}

type ActionType int32

const (
	ActionType_GENERATE_DEVICE_QR_CODE ActionType = 0
	ActionType_GET_DEVICE_QR_CODE      ActionType = 1
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "GENERATE_DEVICE_QR_CODE",
		1: "GET_DEVICE_QR_CODE",
	}
	ActionType_value = map[string]int32{
		"GENERATE_DEVICE_QR_CODE": 0,
		"GET_DEVICE_QR_CODE":      1,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_geotracking_proto_enumTypes[1].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_geotracking_proto_enumTypes[1]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{1}
}

type EventType int32

const (
	EventType_OTHER                  EventType = 0
	EventType_PAIRING_USER_TO_DEVICE EventType = 1
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "OTHER",
		1: "PAIRING_USER_TO_DEVICE",
	}
	EventType_value = map[string]int32{
		"OTHER":                  0,
		"PAIRING_USER_TO_DEVICE": 1,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_geotracking_proto_enumTypes[2].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_geotracking_proto_enumTypes[2]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{2}
}

type GPSData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat   float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Long  float32 `protobuf:"fixed32,2,opt,name=long,proto3" json:"long,omitempty"`
	Speed float32 `protobuf:"fixed32,3,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *GPSData) Reset() {
	*x = GPSData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPSData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSData) ProtoMessage() {}

func (x *GPSData) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSData.ProtoReflect.Descriptor instead.
func (*GPSData) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{0}
}

func (x *GPSData) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GPSData) GetLong() float32 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *GPSData) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress  string     `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	CreatedAt   string     `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeviceType  DeviceType `protobuf:"varint,3,opt,name=device_type,json=deviceType,proto3,enum=proto.DeviceType" json:"device_type,omitempty"`
	ChipId      string     `protobuf:"bytes,4,opt,name=chip_id,json=chipId,proto3" json:"chip_id,omitempty"`
	NetworkMode string     `protobuf:"bytes,5,opt,name=network_mode,json=networkMode,proto3" json:"network_mode,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{1}
}

func (x *Device) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *Device) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Device) GetDeviceType() DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return DeviceType_IOT
}

func (x *Device) GetChipId() string {
	if x != nil {
		return x.ChipId
	}
	return ""
}

func (x *Device) GetNetworkMode() string {
	if x != nil {
		return x.NetworkMode
	}
	return ""
}

type Sensor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalStrength float32 `protobuf:"fixed32,1,opt,name=signal_strength,json=signalStrength,proto3" json:"signal_strength,omitempty"`
	Temp           float32 `protobuf:"fixed32,2,opt,name=temp,proto3" json:"temp,omitempty"`
}

func (x *Sensor) Reset() {
	*x = Sensor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sensor) ProtoMessage() {}

func (x *Sensor) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sensor.ProtoReflect.Descriptor instead.
func (*Sensor) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{2}
}

func (x *Sensor) GetSignalStrength() float32 {
	if x != nil {
		return x.SignalStrength
	}
	return 0
}

func (x *Sensor) GetTemp() float32 {
	if x != nil {
		return x.Temp
	}
	return 0
}

type Paging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	ItemPerPage int64 `protobuf:"varint,2,opt,name=item_per_page,json=itemPerPage,proto3" json:"item_per_page,omitempty"`
}

func (x *Paging) Reset() {
	*x = Paging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paging) ProtoMessage() {}

func (x *Paging) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paging.ProtoReflect.Descriptor instead.
func (*Paging) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{3}
}

func (x *Paging) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Paging) GetItemPerPage() int64 {
	if x != nil {
		return x.ItemPerPage
	}
	return 0
}

type LogItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Status     string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason     string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	RecordedAt string `protobuf:"bytes,4,opt,name=recorded_at,json=recordedAt,proto3" json:"recorded_at,omitempty"`
}

func (x *LogItem) Reset() {
	*x = LogItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogItem) ProtoMessage() {}

func (x *LogItem) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogItem.ProtoReflect.Descriptor instead.
func (*LogItem) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{4}
}

func (x *LogItem) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LogItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LogItem) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *LogItem) GetRecordedAt() string {
	if x != nil {
		return x.RecordedAt
	}
	return ""
}

type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorName string `protobuf:"bytes,1,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
	PhoneNo      string `protobuf:"bytes,2,opt,name=phone_no,json=phoneNo,proto3" json:"phone_no,omitempty"`
	Imei         string `protobuf:"bytes,3,opt,name=imei,proto3" json:"imei,omitempty"`
	Imsi         string `protobuf:"bytes,4,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Apn          string `protobuf:"bytes,5,opt,name=apn,proto3" json:"apn,omitempty"`
	Status       bool   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Network) Reset() {
	*x = Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{5}
}

func (x *Network) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *Network) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *Network) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *Network) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *Network) GetApn() string {
	if x != nil {
		return x.Apn
	}
	return ""
}

func (x *Network) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// GetDeviceLogByDeviceId...
type RequestGetDeviceLogByDeviceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *RequestGetDeviceLogByDeviceId) Reset() {
	*x = RequestGetDeviceLogByDeviceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetDeviceLogByDeviceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetDeviceLogByDeviceId) ProtoMessage() {}

func (x *RequestGetDeviceLogByDeviceId) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetDeviceLogByDeviceId.ProtoReflect.Descriptor instead.
func (*RequestGetDeviceLogByDeviceId) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{6}
}

func (x *RequestGetDeviceLogByDeviceId) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type ResponseGetDeviceLogByDeviceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseGetDeviceLogByDeviceId) Reset() {
	*x = ResponseGetDeviceLogByDeviceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetDeviceLogByDeviceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetDeviceLogByDeviceId) ProtoMessage() {}

func (x *ResponseGetDeviceLogByDeviceId) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetDeviceLogByDeviceId.ProtoReflect.Descriptor instead.
func (*ResponseGetDeviceLogByDeviceId) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{7}
}

// response stream gpstracking
type ResponseStreamGPSTracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Status     string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	GpsData    *GPSData `protobuf:"bytes,3,opt,name=gps_data,json=gpsData,proto3" json:"gps_data,omitempty"`
	DeviceInfo *Device  `protobuf:"bytes,4,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	Sensors    *Sensor  `protobuf:"bytes,5,opt,name=sensors,proto3" json:"sensors,omitempty"`
}

func (x *ResponseStreamGPSTracking) Reset() {
	*x = ResponseStreamGPSTracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseStreamGPSTracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStreamGPSTracking) ProtoMessage() {}

func (x *ResponseStreamGPSTracking) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStreamGPSTracking.ProtoReflect.Descriptor instead.
func (*ResponseStreamGPSTracking) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseStreamGPSTracking) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ResponseStreamGPSTracking) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ResponseStreamGPSTracking) GetGpsData() *GPSData {
	if x != nil {
		return x.GpsData
	}
	return nil
}

func (x *ResponseStreamGPSTracking) GetDeviceInfo() *Device {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *ResponseStreamGPSTracking) GetSensors() *Sensor {
	if x != nil {
		return x.Sensors
	}
	return nil
}

// ResponseGetDeviceCounter...
// item detect device...
type DetectDeviceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceType string `protobuf:"bytes,1,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Count      int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	LastDetect string `protobuf:"bytes,3,opt,name=last_detect,json=lastDetect,proto3" json:"last_detect,omitempty"`
}

func (x *DetectDeviceItem) Reset() {
	*x = DetectDeviceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectDeviceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectDeviceItem) ProtoMessage() {}

func (x *DetectDeviceItem) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectDeviceItem.ProtoReflect.Descriptor instead.
func (*DetectDeviceItem) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{9}
}

func (x *DetectDeviceItem) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *DetectDeviceItem) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DetectDeviceItem) GetLastDetect() string {
	if x != nil {
		return x.LastDetect
	}
	return ""
}

type ResponseGetDeviceCounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivetedDevice  int64               `protobuf:"varint,1,opt,name=activeted_device,json=activetedDevice,proto3" json:"activeted_device,omitempty"`
	RecordedTracking int64               `protobuf:"varint,2,opt,name=recorded_tracking,json=recordedTracking,proto3" json:"recorded_tracking,omitempty"`
	DetectDevice     []*DetectDeviceItem `protobuf:"bytes,3,rep,name=detect_device,json=detectDevice,proto3" json:"detect_device,omitempty"`
}

func (x *ResponseGetDeviceCounter) Reset() {
	*x = ResponseGetDeviceCounter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetDeviceCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetDeviceCounter) ProtoMessage() {}

func (x *ResponseGetDeviceCounter) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetDeviceCounter.ProtoReflect.Descriptor instead.
func (*ResponseGetDeviceCounter) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseGetDeviceCounter) GetActivetedDevice() int64 {
	if x != nil {
		return x.ActivetedDevice
	}
	return 0
}

func (x *ResponseGetDeviceCounter) GetRecordedTracking() int64 {
	if x != nil {
		return x.RecordedTracking
	}
	return 0
}

func (x *ResponseGetDeviceCounter) GetDetectDevice() []*DetectDeviceItem {
	if x != nil {
		return x.DetectDevice
	}
	return nil
}

// RequestGetDeviceLogs...
type RequestGetDeviceLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging     *Paging                `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	RecordedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=recorded_at,json=recordedAt,proto3" json:"recorded_at,omitempty"`
}

func (x *RequestGetDeviceLogs) Reset() {
	*x = RequestGetDeviceLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetDeviceLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetDeviceLogs) ProtoMessage() {}

func (x *RequestGetDeviceLogs) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetDeviceLogs.ProtoReflect.Descriptor instead.
func (*RequestGetDeviceLogs) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{11}
}

func (x *RequestGetDeviceLogs) GetPaging() *Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *RequestGetDeviceLogs) GetRecordedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RecordedAt
	}
	return nil
}

// ResponseGetDeviceLogs...
type ResponseGetDeviceLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceLogs []*LogItem `protobuf:"bytes,1,rep,name=device_logs,json=deviceLogs,proto3" json:"device_logs,omitempty"`
}

func (x *ResponseGetDeviceLogs) Reset() {
	*x = ResponseGetDeviceLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetDeviceLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetDeviceLogs) ProtoMessage() {}

func (x *ResponseGetDeviceLogs) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetDeviceLogs.ProtoReflect.Descriptor instead.
func (*ResponseGetDeviceLogs) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseGetDeviceLogs) GetDeviceLogs() []*LogItem {
	if x != nil {
		return x.DeviceLogs
	}
	return nil
}

// RequestMonitoringDeviceById...
type RequestMonitoringDeviceById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *RequestMonitoringDeviceById) Reset() {
	*x = RequestMonitoringDeviceById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMonitoringDeviceById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMonitoringDeviceById) ProtoMessage() {}

func (x *RequestMonitoringDeviceById) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMonitoringDeviceById.ProtoReflect.Descriptor instead.
func (*RequestMonitoringDeviceById) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{13}
}

func (x *RequestMonitoringDeviceById) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type ResponseMonitoringDeviceById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceLog   *LogItem `protobuf:"bytes,1,opt,name=device_log,json=deviceLog,proto3" json:"device_log,omitempty"`
	GpsTracking *GPSData `protobuf:"bytes,2,opt,name=gps_tracking,json=gpsTracking,proto3" json:"gps_tracking,omitempty"`
}

func (x *ResponseMonitoringDeviceById) Reset() {
	*x = ResponseMonitoringDeviceById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMonitoringDeviceById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMonitoringDeviceById) ProtoMessage() {}

func (x *ResponseMonitoringDeviceById) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMonitoringDeviceById.ProtoReflect.Descriptor instead.
func (*ResponseMonitoringDeviceById) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseMonitoringDeviceById) GetDeviceLog() *LogItem {
	if x != nil {
		return x.DeviceLog
	}
	return nil
}

func (x *ResponseMonitoringDeviceById) GetGpsTracking() *GPSData {
	if x != nil {
		return x.GpsTracking
	}
	return nil
}

// GetDeviceByDeviceId..
type RequestGetDeviceByDeviceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *RequestGetDeviceByDeviceId) Reset() {
	*x = RequestGetDeviceByDeviceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetDeviceByDeviceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetDeviceByDeviceId) ProtoMessage() {}

func (x *RequestGetDeviceByDeviceId) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetDeviceByDeviceId.ProtoReflect.Descriptor instead.
func (*RequestGetDeviceByDeviceId) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{15}
}

func (x *RequestGetDeviceByDeviceId) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type ResponseGetDeviceByDeviceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId      string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Device        *Device  `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	NetworkDetail *Network `protobuf:"bytes,4,opt,name=network_detail,json=networkDetail,proto3" json:"network_detail,omitempty"`
	CreatedAt     string   `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedAt    string   `protobuf:"bytes,6,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
}

func (x *ResponseGetDeviceByDeviceId) Reset() {
	*x = ResponseGetDeviceByDeviceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetDeviceByDeviceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetDeviceByDeviceId) ProtoMessage() {}

func (x *ResponseGetDeviceByDeviceId) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetDeviceByDeviceId.ProtoReflect.Descriptor instead.
func (*ResponseGetDeviceByDeviceId) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseGetDeviceByDeviceId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseGetDeviceByDeviceId) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ResponseGetDeviceByDeviceId) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ResponseGetDeviceByDeviceId) GetNetworkDetail() *Network {
	if x != nil {
		return x.NetworkDetail
	}
	return nil
}

func (x *ResponseGetDeviceByDeviceId) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ResponseGetDeviceByDeviceId) GetModifiedAt() string {
	if x != nil {
		return x.ModifiedAt
	}
	return ""
}

// ES29 Get and Generate device qr code
type RequestDeviceQrCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId    string     `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	EventType   EventType  `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=proto.EventType" json:"event_type,omitempty"`
	ActionType  ActionType `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3,enum=proto.ActionType" json:"action_type,omitempty"`
	Description string     `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RequestDeviceQrCode) Reset() {
	*x = RequestDeviceQrCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDeviceQrCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDeviceQrCode) ProtoMessage() {}

func (x *RequestDeviceQrCode) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDeviceQrCode.ProtoReflect.Descriptor instead.
func (*RequestDeviceQrCode) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{17}
}

func (x *RequestDeviceQrCode) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RequestDeviceQrCode) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_OTHER
}

func (x *RequestDeviceQrCode) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_GENERATE_DEVICE_QR_CODE
}

func (x *RequestDeviceQrCode) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ResponseDeviceQrCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrFile    string `protobuf:"bytes,1,opt,name=qr_file,json=qrFile,proto3" json:"qr_file,omitempty"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	EventType string `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
}

func (x *ResponseDeviceQrCode) Reset() {
	*x = ResponseDeviceQrCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geotracking_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDeviceQrCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDeviceQrCode) ProtoMessage() {}

func (x *ResponseDeviceQrCode) ProtoReflect() protoreflect.Message {
	mi := &file_geotracking_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDeviceQrCode.ProtoReflect.Descriptor instead.
func (*ResponseDeviceQrCode) Descriptor() ([]byte, []int) {
	return file_geotracking_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseDeviceQrCode) GetQrFile() string {
	if x != nil {
		return x.QrFile
	}
	return ""
}

func (x *ResponseDeviceQrCode) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResponseDeviceQrCode) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

var File_geotracking_proto protoreflect.FileDescriptor

var file_geotracking_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x65, 0x6f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x07, 0x47, 0x50, 0x53, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22,
	0xb8, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x06, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x65, 0x6d,
	0x70, 0x22, 0x40, 0x0a, 0x06, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9b, 0x01, 0x0a,
	0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6d, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x70, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x1d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x67, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67,
	0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x19, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x50, 0x53,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a,
	0x08, 0x67, 0x70, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x67, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x73, 0x22, 0x6a, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x22, 0xb0, 0x01,
	0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x74, 0x65, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65,
	0x64, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x7a, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x41, 0x74, 0x22, 0x48, 0x0a, 0x15,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x2f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0x3a, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x67, 0x12, 0x31, 0x0a, 0x0c, 0x67, 0x70, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x50, 0x53, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x67, 0x70, 0x73, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x39, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0xe8, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x0d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x13,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x51, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x71, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x71, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x22, 0x0a, 0x0a, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x54, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x01, 0x2a, 0x41, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x51,
	0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x45, 0x54, 0x5f,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x51, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x01,
	0x2a, 0x32, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x49, 0x52,
	0x49, 0x4e, 0x47, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x10, 0x01, 0x32, 0xe5, 0x04, 0x0a, 0x0b, 0x47, 0x65, 0x6f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x67, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x47, 0x50, 0x53, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x50, 0x53, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x67, 0x73, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x61, 0x0a, 0x14, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x1a,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x51, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x1a,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_geotracking_proto_rawDescOnce sync.Once
	file_geotracking_proto_rawDescData = file_geotracking_proto_rawDesc
)

func file_geotracking_proto_rawDescGZIP() []byte {
	file_geotracking_proto_rawDescOnce.Do(func() {
		file_geotracking_proto_rawDescData = protoimpl.X.CompressGZIP(file_geotracking_proto_rawDescData)
	})
	return file_geotracking_proto_rawDescData
}

var file_geotracking_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_geotracking_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_geotracking_proto_goTypes = []interface{}{
	(DeviceType)(0),                        // 0: proto.DeviceType
	(ActionType)(0),                        // 1: proto.ActionType
	(EventType)(0),                         // 2: proto.EventType
	(*GPSData)(nil),                        // 3: proto.GPSData
	(*Device)(nil),                         // 4: proto.Device
	(*Sensor)(nil),                         // 5: proto.Sensor
	(*Paging)(nil),                         // 6: proto.Paging
	(*LogItem)(nil),                        // 7: proto.LogItem
	(*Network)(nil),                        // 8: proto.Network
	(*RequestGetDeviceLogByDeviceId)(nil),  // 9: proto.RequestGetDeviceLogByDeviceId
	(*ResponseGetDeviceLogByDeviceId)(nil), // 10: proto.ResponseGetDeviceLogByDeviceId
	(*ResponseStreamGPSTracking)(nil),      // 11: proto.ResponseStreamGPSTracking
	(*DetectDeviceItem)(nil),               // 12: proto.DetectDeviceItem
	(*ResponseGetDeviceCounter)(nil),       // 13: proto.ResponseGetDeviceCounter
	(*RequestGetDeviceLogs)(nil),           // 14: proto.RequestGetDeviceLogs
	(*ResponseGetDeviceLogs)(nil),          // 15: proto.ResponseGetDeviceLogs
	(*RequestMonitoringDeviceById)(nil),    // 16: proto.RequestMonitoringDeviceById
	(*ResponseMonitoringDeviceById)(nil),   // 17: proto.ResponseMonitoringDeviceById
	(*RequestGetDeviceByDeviceId)(nil),     // 18: proto.RequestGetDeviceByDeviceId
	(*ResponseGetDeviceByDeviceId)(nil),    // 19: proto.ResponseGetDeviceByDeviceId
	(*RequestDeviceQrCode)(nil),            // 20: proto.RequestDeviceQrCode
	(*ResponseDeviceQrCode)(nil),           // 21: proto.ResponseDeviceQrCode
	(*timestamppb.Timestamp)(nil),          // 22: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 23: google.protobuf.Empty
}
var file_geotracking_proto_depIdxs = []int32{
	0,  // 0: proto.Device.device_type:type_name -> proto.DeviceType
	3,  // 1: proto.ResponseStreamGPSTracking.gps_data:type_name -> proto.GPSData
	4,  // 2: proto.ResponseStreamGPSTracking.device_info:type_name -> proto.Device
	5,  // 3: proto.ResponseStreamGPSTracking.sensors:type_name -> proto.Sensor
	12, // 4: proto.ResponseGetDeviceCounter.detect_device:type_name -> proto.DetectDeviceItem
	6,  // 5: proto.RequestGetDeviceLogs.paging:type_name -> proto.Paging
	22, // 6: proto.RequestGetDeviceLogs.recorded_at:type_name -> google.protobuf.Timestamp
	7,  // 7: proto.ResponseGetDeviceLogs.device_logs:type_name -> proto.LogItem
	7,  // 8: proto.ResponseMonitoringDeviceById.device_log:type_name -> proto.LogItem
	3,  // 9: proto.ResponseMonitoringDeviceById.gps_tracking:type_name -> proto.GPSData
	4,  // 10: proto.ResponseGetDeviceByDeviceId.device:type_name -> proto.Device
	8,  // 11: proto.ResponseGetDeviceByDeviceId.network_detail:type_name -> proto.Network
	2,  // 12: proto.RequestDeviceQrCode.event_type:type_name -> proto.EventType
	1,  // 13: proto.RequestDeviceQrCode.action_type:type_name -> proto.ActionType
	9,  // 14: proto.Geotracking.GetDeviceLogByDeviceId:input_type -> proto.RequestGetDeviceLogByDeviceId
	23, // 15: proto.Geotracking.GetGPSTracking:input_type -> google.protobuf.Empty
	23, // 16: proto.Geotracking.GetDeviceCounter:input_type -> google.protobuf.Empty
	14, // 17: proto.Geotracking.GetDeviceLogs:input_type -> proto.RequestGetDeviceLogs
	16, // 18: proto.Geotracking.MonitoringDeviceById:input_type -> proto.RequestMonitoringDeviceById
	18, // 19: proto.Geotracking.GetDeviceByDeviceId:input_type -> proto.RequestGetDeviceByDeviceId
	20, // 20: proto.Geotracking.DeviceQrCode:input_type -> proto.RequestDeviceQrCode
	10, // 21: proto.Geotracking.GetDeviceLogByDeviceId:output_type -> proto.ResponseGetDeviceLogByDeviceId
	11, // 22: proto.Geotracking.GetGPSTracking:output_type -> proto.ResponseStreamGPSTracking
	13, // 23: proto.Geotracking.GetDeviceCounter:output_type -> proto.ResponseGetDeviceCounter
	15, // 24: proto.Geotracking.GetDeviceLogs:output_type -> proto.ResponseGetDeviceLogs
	17, // 25: proto.Geotracking.MonitoringDeviceById:output_type -> proto.ResponseMonitoringDeviceById
	19, // 26: proto.Geotracking.GetDeviceByDeviceId:output_type -> proto.ResponseGetDeviceByDeviceId
	21, // 27: proto.Geotracking.DeviceQrCode:output_type -> proto.ResponseDeviceQrCode
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_geotracking_proto_init() }
func file_geotracking_proto_init() {
	if File_geotracking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_geotracking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPSData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sensor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetDeviceLogByDeviceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetDeviceLogByDeviceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStreamGPSTracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectDeviceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetDeviceCounter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetDeviceLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetDeviceLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMonitoringDeviceById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMonitoringDeviceById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetDeviceByDeviceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetDeviceByDeviceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDeviceQrCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geotracking_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDeviceQrCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geotracking_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_geotracking_proto_goTypes,
		DependencyIndexes: file_geotracking_proto_depIdxs,
		EnumInfos:         file_geotracking_proto_enumTypes,
		MessageInfos:      file_geotracking_proto_msgTypes,
	}.Build()
	File_geotracking_proto = out.File
	file_geotracking_proto_rawDesc = nil
	file_geotracking_proto_goTypes = nil
	file_geotracking_proto_depIdxs = nil
}
