syntax="proto3";
package proto;
option go_package="./;proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

enum DeviceType {
	IOT = 0;
	ANDROID = 1;
}
enum ActionType {
	GENERATE_DEVICE_QR_CODE  = 0;
	GET_DEVICE_QR_CODE 		= 1;
}
enum EventType {
	OTHER = 0;
	PAIRING_USER_TO_DEVICE = 1;
}

message GPSData {
	float   lat  = 1;
	float   long = 2;
	float   speed = 3;
}
message Device {
	string mac_address = 1;
	string created_at  = 2;
	DeviceType device_type = 3;
	string chip_id = 4;
	string network_mode = 5;
}
message Sensor {
	float signal_strength = 1;
	float temp = 2;
}

message Paging {
	int64 page = 1;
	int64 item_per_page = 2;
}

message LogItem {
	string device_id = 1;
	string status 	  = 2;
	string reason 	  = 3;
	string recorded_at = 4;
}

message Network {
	string operator_name = 1;
	string phone_no 	 = 2;
	string imei 		 = 3;
	string imsi 		 = 4;
	string apn 		 = 5;
	bool   status 		 = 6;
}

// GetDeviceLogByDeviceId...
message RequestGetDeviceLogByDeviceId {
	string device_id = 1;
}
message ResponseGetDeviceLogByDeviceId {
}

// response stream gpstracking
message ResponseStreamGPSTracking {
	string  device_id=1;
	string  status=2;
	GPSData gps_data = 3;
	Device  device_info = 4;
	Sensor  sensors = 5;
}

// ResponseGetDeviceCounter...
// item detect device...
message DetectDeviceItem {
    string device_type =  1;
    int64  count 	   =  2;
    string last_detect =  3;
}

message ResponseGetDeviceCounter {
    int64    activeted_device  = 1;
    int64    recorded_tracking = 2;
    repeated DetectDeviceItem detect_device = 3;
}

// RequestGetDeviceLogs...
message RequestGetDeviceLogs {
	Paging paging = 1;
	google.protobuf.Timestamp recorded_at = 2;
}

// ResponseGetDeviceLogs...
message ResponseGetDeviceLogs {
	repeated LogItem device_logs = 1;
}

// RequestMonitoringDeviceById...
message RequestMonitoringDeviceById {
	string device_id = 1;
}
message ResponseMonitoringDeviceById {
	LogItem device_log   = 1;
	GPSData gps_tracking = 2;
}

// GetDeviceByDeviceId..
message RequestGetDeviceByDeviceId {
	string device_id = 1;
}
message ResponseGetDeviceByDeviceId {
	int64 	id 		= 1;
	string 	device_id = 2;
     Device 	device 	= 3;
     Network   network_detail = 4;
	string 	created_at = 5;
	string 	modified_at = 6;
}

// ES29 Get and Generate device qr code 
message RequestDeviceQrCode {
	string 	 device_id = 1;
	EventType  event_type = 2;
	ActionType action_type = 3;
	string 	 description = 4;
}
message ResponseDeviceQrCode {
	string qr_file = 1;
	string url 	= 2;
	string event_type =3;
}

// get sensor by id
message RequestGetSemsorById {
	int64 sensor_id = 1;
}
message ResponseGetSensorById {
	int64  id = 1;
	string sensor_name = 2;
	string description = 3;
	string sensor_type = 4;
}

service Geotracking {
	rpc GetDeviceLogByDeviceId(RequestGetDeviceLogByDeviceId) returns (ResponseGetDeviceLogByDeviceId);
	rpc GetGPSTracking(google.protobuf.Empty) returns (stream ResponseStreamGPSTracking);
	rpc GetDeviceCounter(google.protobuf.Empty) returns (ResponseGetDeviceCounter);
	rpc GetDeviceLogs(RequestGetDeviceLogs) returns (ResponseGetDeviceLogs);
	rpc MonitoringDeviceById(RequestMonitoringDeviceById) returns (stream ResponseMonitoringDeviceById);
	rpc GetDeviceByDeviceId(RequestGetDeviceByDeviceId) returns(ResponseGetDeviceByDeviceId);
	rpc DeviceQrCode(RequestDeviceQrCode) returns(ResponseDeviceQrCode);
	rpc GetSensorById(RequestGetSemsorById) returns(ResponseGetSensorById);
}
